{"ast":null,"code":"var _jsxFileName = \"E:\\\\xampp\\\\htdocs\\\\28_udemy_react_js_tutorial\\\\10_lecture_10\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // console.log('before useEffect');\n  useEffect(() => {\n    // console.log('useEffect');\n    const localStorageUserLoggedinInfo = parseInt(localStorage.getItem('userLoggedin'));\n    if (localStorageUserLoggedinInfo === 1) {\n      // console.log('localStorageUserLoggedinInfo',localStorageUserLoggedinInfo);\n      setIsLoggedIn(true);\n    }\n  }, []);\n  // console.log('after useEffect');\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('userLoggedin', 1);\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 27\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","localStorageUserLoggedinInfo","parseInt","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","Fragment","children","Provider","value","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["E:/xampp/htdocs/28_udemy_react_js_tutorial/10_lecture_10/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport Login from './components/Login/Login';\r\nimport Home from './components/Home/Home';\r\nimport MainHeader from './components/MainHeader/MainHeader';\r\nimport AuthContext from './store/auth-context.js'\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  // console.log('before useEffect');\r\n  useEffect(()=>{\r\n    // console.log('useEffect');\r\n    const localStorageUserLoggedinInfo = parseInt(localStorage.getItem('userLoggedin'));\r\n    if(localStorageUserLoggedinInfo === 1){\r\n      // console.log('localStorageUserLoggedinInfo',localStorageUserLoggedinInfo);\r\n      setIsLoggedIn(true);\r\n    }\r\n  },[]);\r\n  // console.log('after useEffect');\r\n\r\n  const loginHandler = (email, password) => {\r\n    // We should of course check email and password\r\n    // But it's just a dummy/ demo anyways\r\n    localStorage.setItem('userLoggedin',1);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AuthContext.Provider value={{\r\n          isLoggedIn: isLoggedIn,\r\n          onLogout: logoutHandler\r\n      }}>\r\n        <MainHeader   />\r\n        <main>\r\n          {!isLoggedIn && <Login onLogin={loginHandler} />}\r\n          {isLoggedIn && <Home  />}\r\n        </main>\r\n      </AuthContext.Provider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD;EACAC,SAAS,CAAC,MAAI;IACZ;IACA,MAAMW,4BAA4B,GAAGC,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IACnF,IAAGH,4BAA4B,KAAK,CAAC,EAAC;MACpC;MACAD,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAC,EAAE,CAAC;EACL;;EAEA,MAAMK,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;IACAJ,YAAY,CAACK,OAAO,CAAC,cAAc,EAAC,CAAC,CAAC;IACtCR,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1BT,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA,CAACR,KAAK,CAACsB,QAAQ;IAAAC,QAAA,eACbf,OAAA,CAACF,WAAW,CAACkB,QAAQ;MAACC,KAAK,EAAE;QACzBd,UAAU,EAAEA,UAAU;QACtBe,QAAQ,EAAEL;MACd,CAAE;MAAAE,QAAA,gBACAf,OAAA,CAACH,UAAU;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAChBtB,OAAA;QAAAe,QAAA,GACG,CAACZ,UAAU,iBAAIH,OAAA,CAACL,KAAK;UAAC4B,OAAO,EAAEd;QAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,EAC/CnB,UAAU,iBAAIH,OAAA,CAACJ,IAAI;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACc;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAErB;AAACpB,EAAA,CAtCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}